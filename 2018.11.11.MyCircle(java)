import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

class MyFrame extends JFrame{
	JPanel panel;	//frame에 붙힐 panel 선언
	//test
	//인자 없는 생성자
	public MyFrame() {
		panel = new JPanel();	//panel 생성
		
		setSize(1000, 800);	//frame의 사이즈를 1000 X 800으로 설정
		panel.setSize(1000, 800);	//panel의 사이즈를 1000 X 800으로 설정
		add(panel);	//frame에 panel을 붙힌다
		setLayout(null);	//frame의 배치관리자는 null로 설정한다
		panel.setLayout(null);	//panel의 배치관리자는 null로 설정한다
		
		setResizable(false);	//frame의 창 크기를 변경할 수 없도록 설정
		setVisible(true);	//frame이 보이도록 설정
		//frame을 닫을 시 자동으로 프로그램이 종료되도록 설정
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		//mouseAdapter는 단 한번만 필요하니 익명 클래스로 작성
		//mouseAdapter class는 mouseListener를 구현하니 업캐스팅 가능
		panel.addMouseListener(new MouseAdapter() {
			Graphics g;	//그래픽을 그릴 Graphics 선언
			//사용자가 컴포넌트를 클릭한 경우 호출되는 메소드
			public void mouseClicked(MouseEvent e) {
				//frame 밖으로 원이 나가서 원이 잘리는 경우를 제한하기 위하여 범위 제한을 하였다
				if(e.getX() >= 883 || e.getX() <= 100 || e.getY() >= 659 | e.getY() <= 100)
					return;
				int n = getRand(200);	//getRand(200)은 0~199 사이의 랜덤 수를 반환한다
				n++;
				
				g = getGraphics();	//그래픽을 그릴 도구를 받는다
				//setColor 메소드를 호출하여 색을 지정한다.
				//이때 Color 객체를 넘기며 RGB(0~255)의 값을 줄 수 있다.
				g.setColor(new Color(getRand(256), getRand(256), getRand(256)));
				//1~200의 랜덤한 크기의 원을 클릭한 좌표에 그린다.
				g.fillOval(e.getX()-(n/2)+8, e.getY()-(n/2)+31, n, n);
			}
			//랜덤한 수를 반환하는 메소드
			public int getRand(int size) {
				return (int)(Math.random()*size);	//매개변수로 받은 size 사이의 정수를 반환한다.
			}
		});
	}
}

public class MyCircle {
	public static void main(String[] args) {
		//main 함수에서는 MyFrame 객체를 생성하는 것이 끝이다
		MyFrame frame = new MyFrame();
	}
}
